name: brew test-bot
on:
  push:
    branches:
    - main
  pull_request:
jobs:
  test-bot:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        #- macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      #- run: brew test-bot --only-cleanup-before
      #- run: brew test-bot --only-setup
      #- run: brew test-bot --only-tap-syntax
      #- run: brew test-bot --only-formulae
      #  if: github.event_name == 'pull_request'

      - name: XXX
        env:
          PR: ${{ github.event.pull_request.number }}
        run: |
          echo "Running for PR #${PR}"

          FILES=$(
              curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PR}/files" \
                      --silent \
                      --location \
                      --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
                  jq --raw-output '.[].filename'
          )
          STARTS_WITH="scripts/"
          for FILE in ${FILES}; do
              if test "${FILE:0:${#STARTS_WITH}}" == "${STARTS_WITH}"; then
                  echo "Processing file ${FILE}"
                  FORMULA="$(basename "${FILE}" .rb)"
                  echo "Processing formula ${FORMULA}"
              fi
          done
          false

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: '*.bottle.*'
